steps:
- name: gcr.io/cloud-builders/mvn
  args: ['package','-Dmaven.test.skip=true']
  id: package
- name: gcr.io/cloud-builders/docker
  args: ['build','-t','europe-docker.pkg.dev/$PROJECT_ID/cloudbuilds/javasample:$SHORT_SHA','--build-arg=JAR_FILE=target/sample-0.0.1-SNAPSHOT.jar','.']
  id: build
  waitFor: ['package']
- name: gcr.io/cloud-builders/docker
  args: ['push','europe-docker.pkg.dev/$PROJECT_ID/cloudbuilds/javasample:$SHORT_SHA']
  id: push
  waitFor: ['package','build']
- name: "gcr.io/cloud-builders/gke-deploy"
  id: prepare
  args:
  - prepare
  - --filename=kubernetes/javasample.yaml
  - --image=europe-docker.pkg.dev/$PROJECT_ID/cloudbuilds/javasample:$SHORT_SHA
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    export KUBECONFIG="$(pwd)/gateway-kubeconfig" && \
    gcloud beta container hub memberships get-credentials aks-cluster && \
    kubectl --kubeconfig gateway-kubeconfig apply -f output/expanded
id: deploy-to-eks
